{"version":3,"sources":["images/sprite.svg","componets/icon/index.js","componets/icon/icon.js","componets/item-list/index.js","componets/item-list/item-list.js","componets/app/app.js","componets/app/index.js","index.js"],"names":["Icon","name","className","href","sprite","ItemList","id","cached","opened","setOpened","current","children","items","map","item","title","switcherStatus","includes","extension","split","slice","pop","iconName","switchButton","onClick","filter","length","App","useState","setCached","useEffect","fetchData","a","lastId","fetch","response","json","data","ReactDOM","render","document","getElementById"],"mappings":"6TAAe,G,YAAA,IAA0B,oC,OCE1BA,ECCF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,qBAAKC,UAAW,aAAeD,EAA/B,SACE,qBAAKE,KAAMC,EAAS,SAAWH,OCJtBI,ECCE,SAAXA,EAAY,GAA2C,IAAD,IAAxCC,UAAwC,MAAnC,EAAmC,EAAhCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACpCC,EAAUH,EAAOD,GAEvB,IAAKI,EAAS,OAAO,EAErB,IAAQC,EAAaD,EAAbC,SAEFC,EAAQD,EAASE,KAAI,SAACC,GAC1B,IAAQR,EAAwBQ,EAAxBR,GAAIS,EAAoBD,EAApBC,MAAOJ,EAAaG,EAAbH,SAEbK,EAAiBR,EAAOS,SAASX,GAEjCY,EAAYH,EAAMI,MAAM,KAAKC,MAAM,GAAGC,MAExCC,EAAW,OACXC,EAAe,GA0BnB,OAxBIZ,IACFW,EAAW,SACXC,EACE,qBACErB,UACE,uBAAyBc,EAAiB,4BAA8B,IAE1EQ,QAAS,WAELf,EADEO,EACQR,EAAOiB,QAAO,SAACX,GAAD,OAAUA,IAASR,KAEjC,GAAD,mBAAKE,GAAL,CAAaF,MAR5B,SAYE,cAAC,EAAD,CAAML,KAAK,kBAKb,CAAC,MAAO,OAAOgB,SAASC,KAC1BI,EAAWJ,GAIX,qBAAIhB,UAAU,aAAd,UACGqB,EACD,qBAAKrB,UAAU,kBAAf,SACE,cAAC,EAAD,CAAMD,KAAMqB,MAEbP,EACAJ,GAAYK,EACX,cAACX,EAAD,CACEC,GAAIA,EACJC,OAAQA,EACRC,OAAQA,EACRC,UAAWA,IAGb,KAd4BH,MAoBpC,QAAKK,EAASe,QAEP,oBAAIxB,UAAU,aAAd,SAA4BU,KCpCtBe,G,MA3BH,WACV,MAA4BC,mBAAS,IAArC,mBAAOrB,EAAP,KAAesB,EAAf,KACA,EAA4BD,mBAAS,CAAC,IAAtC,mBAAOpB,EAAP,KAAeC,EAAf,KAkBA,OAhBAqB,qBAAU,WACR,IAAMC,EAAS,uCAAG,gCAAAC,EAAA,yDACVC,EAASzB,EAAOA,EAAOkB,OAAS,IAClCnB,EAAO0B,GAFK,iEAGOC,MAAM,wCAAD,OAExBD,EAAS,UAAYA,EAAS,KALlB,cAGVE,EAHU,gBAQGA,EAASC,OARZ,OAQVC,EARU,OAShBR,EAAU,2BAAKtB,GAAN,kBAAe0B,EAASI,KATjB,4CAAH,qDAYfN,OAIA,qBAAK7B,UAAU,OAAf,SACE,cAAC,EAAD,CAAUK,OAAQA,EAAQC,OAAQA,EAAQC,UAAWA,QCxB5CkB,ICMfW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a98ce057.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sprite.d950905d.svg\";","import Icon from \"./icon\";\r\n\r\nexport default Icon;\r\n","import \"./icon.css\";\r\nimport sprite from \"../../images/sprite.svg\";\r\n\r\nconst Icon = ({ name }) => {\r\n  return (\r\n    <svg className={\"icon icon-\" + name}>\r\n      <use href={sprite + \"#icon-\" + name}></use>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import ItemList from \"./item-list\";\r\n\r\nexport default ItemList;\r\n","import \"./item-list.css\";\r\nimport Icon from \"../icon\";\r\n\r\nconst ItemList = ({ id = 0, cached, opened, setOpened }) => {\r\n  const current = cached[id];\r\n\r\n  if (!current) return false;\r\n\r\n  const { children } = current;\r\n\r\n  const items = children.map((item) => {\r\n    const { id, title, children } = item;\r\n\r\n    const switcherStatus = opened.includes(id);\r\n\r\n    const extension = title.split(\".\").slice(1).pop();\r\n\r\n    let iconName = \"file\";\r\n    let switchButton = \"\";\r\n\r\n    if (children) {\r\n      iconName = \"folder\";\r\n      switchButton = (\r\n        <div\r\n          className={\r\n            \"tree__item-switcher\" + (switcherStatus ? \" tree__item-switcher_open\" : \"\")\r\n          }\r\n          onClick={() => {\r\n            if (switcherStatus) {\r\n              setOpened(opened.filter((item) => item !== id));\r\n            } else {\r\n              setOpened([...opened, id]);\r\n            }\r\n          }}\r\n        >\r\n          <Icon name=\"caret-down\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if ([\"zip\", \"jpg\"].includes(extension)) {\r\n      iconName = extension;\r\n    }\r\n\r\n    return (\r\n      <li className=\"tree__item\" key={id}>\r\n        {switchButton}\r\n        <div className=\"tree__item-icon\">\r\n          <Icon name={iconName} />\r\n        </div>\r\n        {title}\r\n        {children && switcherStatus ? (\r\n          <ItemList\r\n            id={id}\r\n            cached={cached}\r\n            opened={opened}\r\n            setOpened={setOpened}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  if (!children.length) return false;\r\n\r\n  return <ul className=\"tree__list\">{items}</ul>;\r\n};\r\n\r\nexport default ItemList;\r\n","import ItemList from \"../item-list\";\r\nimport \"./app.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n  const [cached, setCached] = useState({});\r\n  const [opened, setOpened] = useState([0]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const lastId = opened[opened.length - 1];\r\n      if (cached[lastId]) return;\r\n      const response = await fetch(\r\n        `http://164.90.161.80:3000/api/content${\r\n          lastId ? \"?dirId=\" + lastId : \"\"\r\n        }`\r\n      );\r\n      const data = await response.json();\r\n      setCached({ ...cached, [lastId]: data });\r\n    };\r\n\r\n    fetchData();\r\n  });\r\n\r\n  return (\r\n    <div className=\"tree\">\r\n      <ItemList cached={cached} opened={opened} setOpened={setOpened} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import App from \"./app\";\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./normalize.css\";\nimport \"./styles.css\";\n\nimport App from \"./componets/app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}